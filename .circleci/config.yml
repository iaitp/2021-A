version: 2 
jobs:
  build_and_test: 
    working_directory: ~
    docker: # run the steps with Docker
      # CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
      - image: circleci/python:3.8
#         auth:
#           username: mydockerhub-user
#           password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
#         environment: # environment variables for primary container
#           PIPENV_VENV_IN_PROJECT: true
#           DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
#       # CircleCI PostgreSQL images available at: https://hub.docker.com/r/circleci/postgres/
#       - image: circleci/postgres:9.6.2
#         auth:
#           username: mydockerhub-user
#           password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
#         environment: # environment variables for the Postgres container.
#           POSTGRES_USER: root
#           POSTGRES_DB: circle_test
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.8/site-packages
#       - restore_cache:
#       # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
#           key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install requirements-test.txt
            sudo pip install -e .
#       - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key
#           key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
#           paths:
          
          
workflows:
  build_and_test:
    jobs:
      - build-and-test

